FROM php:7.4-fpm-alpine

RUN echo "UTC" > /etc/timezone

# Install PHP modules
RUN set -ex \
    && apk update && apk upgrade\
    # Installations into virtual env so they can be deleted afterwards
    # (.phpize-deps is standardized by docker-php-ext-install)
    && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \
    && apk add --no-cache --virtual .build-deps \
    make \
    # Installations that should be kept
    && apk add --no-cache \
        openssl-dev \
        freetype-dev \
        libpng-dev \
        libjpeg-turbo-dev \
        libmcrypt-dev \
        git \
        openssh-client \
        curl \
        wget \
        libbz2 \
        libzip-dev \
        libxml2-dev \
        libtool \
        zlib-dev \
        bzip2-dev \
        icu-dev \
        unzip \
        oniguruma-dev \
        curl-dev \
        linux-headers > /dev/null \
    && pecl bundle -d /usr/src/php/ext apcu \
    && docker-php-ext-install -j2 apcu \
    && docker-php-ext-install -j2 bcmath iconv mbstring zip bz2 json pdo pdo_mysql simplexml sockets exif curl \
    && docker-php-ext-enable opcache \
    && rm /usr/src/php/ext/*.tgz \
    # Install composer
    && EXPECTED_COMPOSER_SIGNATURE=$(wget -q -O - https://composer.github.io/installer.sig) \
    && php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
    && php -r "if (hash_file('SHA384', 'composer-setup.php') === '${EXPECTED_COMPOSER_SIGNATURE}') { echo 'Composer.phar Installer verified'; } else { echo 'Composer.phar Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;" \
    && php composer-setup.php --install-dir=/usr/bin --filename=composer \
    && php -r "unlink('composer-setup.php');" \
    && composer --version \
    # Remove unnecessary stuff
    && apk del .phpize-deps .build-deps

WORKDIR /var/www/html

# Use the default PHP production configuration
RUN mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
# Custom PHP adjustments (zz to make them the last being applied)
COPY etc/docker/php.ini.local $PHP_INI_DIR/conf.d/zz-usln.ini

# Composer install stuff
COPY composer.* ./

RUN set -ex \
  && composer install --prefer-dist --no-interaction --no-dev -a \
  # Delete cache directory to reduce size of image
  && rm -rf ~/.composer/cache

COPY . .

RUN set -ex \
  && composer dump-autoload --no-dev -a

RUN chown -R www-data:www-data ./var/

# fastcgi/php-fpm server available on port 9000, needs extra nginx to be able to serve http
EXPOSE 9000
